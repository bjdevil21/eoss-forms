<?php

/**
 * Create node IDs, component IDs mapping tables between src and dst databases.
 * Add uuid field to webform components
 *
 * Implements hook_schema().
 */
function eoss_webforms_followup_schema() {
  $schema['migrate_map_custom_nids'] = array(
    'description' => 'Webform node ID (nid) mapping for source and destination nodes.',
    'fields' => array(
      'nid' => array(
        'description' => 'New destination node ID',
        'type' => 'int',
        'not null' => TRUE,
        'unsigned' => TRUE,
      ),
      'src_nid' => array(
        'description' => 'Source node ID',
        'type' => 'int',
        'not null' => TRUE,
        'unsigned' => TRUE,
        'default' => 0,
      ),
      'title' => array(
        'description' => 'The webform node title (src + dst)',
        'type' => 'varchar',
        'length' => '255',
        'not null' => TRUE,
      ),
      'uuid' => array(
        'description' => 'The node UUID (matches in src and dst).',
        'type' => 'varchar',
        'length' => '64',
        'not null' => TRUE,
      ),
      'migration_class' => array(
        'description' => 'The Migrate API class that needs this data.',
        'type' => 'varchar',
        'length' => '128',
        'not null' => TRUE,
      ),
      'created' => array(
        'description' => 'Timestamp for the creation time of this record.',
        'type' => 'int',
        'not null' => TRUE,
        'unsigned' => TRUE,
        'default' => 0,
      ),
    ),
    'primary key' => array('nid'),
    'unique keys' => array(
      'nid_UNIQUE' => array('nid'),
      'src_nid_UNIQUE' => array('src_nid'),
      'uuid_UNIQUE' => array('uuid')
    ),
  );
  $schema['migrate_map_custom_cid'] = array(
    'description' => 'Webform component ID (nid) mapping for source and destination components.',
    'fields' => array(
      'machine_name' => array(
        'description' => 'The component machine_name.',
        'type' => 'varchar',
        'length' => '255',
        'not null' => TRUE,
      ),
      'cid' => array(
        'description' => 'New destination component ID.',
        'type' => 'int',
        'not null' => TRUE,
        'unsigned' => TRUE,
      ),
      'src_cid' => array(
        'description' => 'Source component ID.',
        'type' => 'int',
        'not null' => TRUE,
        'unsigned' => TRUE,
        'default' => 0,
      ),
      'nid' => array(
        'description' => 'Destination webform nid.',
        'type' => 'int',
        'not null' => TRUE,
        'unsigned' => TRUE,
        'default' => 0,
      ),
      'src_nid' => array(
        'description' => 'Source webform nid.',
        'type' => 'int',
        'not null' => TRUE,
        'unsigned' => TRUE,
        'default' => 0,
      ),
      'migration_class' => array(
        'description' => 'The Migrate API class(es) that needs this data.',
        'type' => 'varchar',
        'length' => '128',
        'not null' => TRUE,
      ),
      'created' => array(
        'description' => 'Timestamp for the creation time of this record.',
        'type' => 'int',
        'not null' => TRUE,
        'unsigned' => TRUE,
        'default' => 0,
      ),
    ),
    'primary key' => array('machine_name'),
    'unique keys' => array(
      'machine_name_UNIQUE' => array('machine_name'),
    ),
  );

  return $schema;
}

/**
 * Generate required mappings for Migrate API:
 * - Node IDs
 * - Component IDs
 *
 * Implements hook_install().
 */
function eoss_webforms_followup_install() {

  $nid_table = _eoss_webforms_followup_migration_data('table_nid');
  $cid_table = _eoss_webforms_followup_migration_data('table_cid');
  $cid_class = _eoss_webforms_followup_migration_data('class_cid');
  $nid_class = _eoss_webforms_followup_migration_data('class_nid');

  $tables = array($cid_table, $nid_table);
  foreach($tables as $table) {
    $table_check = Database::getConnection('default')
      ->schema()->tableExists($table);
    if (!$table_check) {
      throw new MigrateException(t("The migration table @table in the @conn database does not exist.",
        array('@table' => $table, '@conn' => 'eossMigrate')));
    }
  }

  /** Populate custom NID mappings table */

  $src_query = Database::getConnection('default', 'eossMigrate')
    ->select('node', 'n1')
    ->fields('n1', array('nid', 'uuid'))
    ->condition('n1.type', 'webform')
    ->orderBy('n1.nid');
  $results_src = $src_query->execute()->fetchAllKeyed();
  $results = array();
  foreach ($results_src as $src_nid => $src_uuid) {
    $query = Database::getConnection('default')
      ->select('node', 'n2')
      ->fields('n2', array('nid', 'title', 'uuid'))
      ->condition('n2.type', 'webform')
      ->condition('n2.uuid', $src_uuid)
      ->orderBy('n2.nid');
    $result = $query->execute()->fetchAll(); // only one UUID
    $result[0]->src_nid = $src_nid;
    $results[$src_uuid] = $result;
  }
  foreach ($results as $key => $resultObj) {
    db_insert(_eoss_webforms_followup_migration_data('table_nid'))
      ->fields(array(
        'nid' => $resultObj[0]->nid,
        'title' => $resultObj[0]->title,
        'uuid' => $resultObj[0]->uuid,
        'migration_class' => $nid_class,
        'created' => REQUEST_TIME,
        'src_nid' => $resultObj[0]->src_nid,
      ))
      ->execute();
  }

  /** Populate custom CID mappings table */

  $src_query = Database::getConnection('default',  'eossMigrate')
    ->select('webform_component', 'wc')
    ->fields('wc', array('nid', 'cid', 'form_key', 'machine_name'))
    ->orderBy('wc.nid', 'wc.machine_name');
  $results = $src_query->execute()->fetchAll();

  foreach ($results as $result) {
    // More data cleanup
    _cid_import_pre_insert($result);

    // Prep work: Get destination NID for insertion
    $subquery = db_select($nid_table, 'm')
      ->fields('m', array('nid'))
      ->condition('m.src_nid', $result->nid);
    $dst_nid = $subquery->execute()->fetchField(); // get first column data from single result

    // Main "stub" data inserted into cid_table. Still missing the new CID, but has everything else.
    db_insert($cid_table)
      ->fields(array(
        'machine_name' => $result->machine_name,
        'cid' => $result->cid,
        'src_cid' => $result->cid,
        'src_nid' => $result->nid,
        'nid' => (!empty($dst_nid)) ? (int) $dst_nid : 0,
        'migration_class' => $cid_class,
        'created' => REQUEST_TIME,
      ))->execute();
  }

  // Finally, update with the new destination CID values
  $subquery = Database::getConnection('default')
    ->select('webform_component', 'wc')
    ->fields('wc', array('machine_name', 'cid'))
    ->isNotNull('wc.machine_name');
  $results = $subquery->execute()->fetchAll();
  foreach ($results as $result) {
    $dst_query = Database::getConnection('default')
      ->update($cid_table)
      ->fields(array(
        'cid' => $result->cid,
      ))
      ->condition('machine_name', $result->machine_name, 'LIKE');
    $dst_query->execute();
  }

}

/**
 * Webform Features pre-cid mappings creation - data cleanup
 * @param $result
 * @return mixed
 */
function _cid_import_pre_insert($result) {
  // Update webform table machine_name entries
  /* Update feature keys in eoss-migrate */

  $names = array(
    'contact_us-are_you_interested_in_having_american_dream_academy_at_your_site' => array(
      'form_key' => 'are_you_interested_in_having_american_dream_academy_at_your_site',
      'machine_name' => 'contact_us_ada-are_you_interested_in_having_american_dream_academy_at_your_site',
    ),
    'contact_us-question__comment' => array(
      'form_key' => 'question__comment',
      'machine_name' => 'contact_us_ada-question__comment',
    ),
    'contact_us-school_or_organization' => array(
      'form_key' => 'school_or_organization',
      'machine_name' => 'contact_us_ada-school_or_organization',
    ),
    'contact_us-title' => array(
      'form_key' => 'title',
      'machine_name' => 'contact_us_ada-title',
    ),
    'contact_us_2-ccli_class' => array(
      'form_key' => 'ccli_class',
      'machine_name' => 'contact_us_cesar-ccli_class',
    ),
    'contact_us_2-city' => array(
      'form_key' => 'city',
      'machine_name' => 'contact_us_cesar-city',
    ),
    'contact_us_2-email' => array(
      'form_key' => 'email',
      'machine_name' => 'contact_us_cesar-email',
    ),
    'contact_us_2-first_name' => array(
      'form_key' => 'first_name',
      'machine_name' => 'contact_us_cesar-first_name',
    ),
    'contact_us_2-last_name' => array(
      'form_key' => 'last_name',
      'machine_name' => 'contact_us_cesar-last_name',
    ),
    'contact_us_2-middle_name' => array(
      'form_key' => 'middle_name',
      'machine_name' => 'contact_us_cesar-middle_name',
    ),
    'contact_us_2-phone_number' => array(
      'form_key' => 'phone_number',
      'machine_name' => 'contact_us_cesar-phone_number',
    ),
    'contact_us_2-state' => array(
      'form_key' => 'state',
      'machine_name' => 'contact_us_cesar-state',
    ),
    'contact_us_2-street_address_1' => array(
      'form_key' => 'street_address_1',
      'machine_name' => 'contact_us_cesar-street_address_1',
    ),
    'contact_us_2-street_address_2' => array(
      'form_key' => 'street_address_2',
      'machine_name' => 'contact_us_cesar-street_address_2',
    ),
    'contact_us_2-subject' => array(
      'form_key' => 'subject',
      'machine_name' => 'contact_us_cesar-subject',
    ),
    'contact_us_2-what_is_the_highest_level_of_education_you_have_achieved' => array(
      'form_key' => 'what_is_the_highest_level_of_education_you_have_achieved',
      'machine_name' => 'contact_us_cesar-what_is_the_highest_level_of_education_you_have_achieved',
    ),
    'contact_us_2-zip_code' => array(
      'form_key' => 'zip_code',
      'machine_name' => 'contact_us_cesar-zip_code',
    ),
    'contact_us_3-email_address' => array(
      'form_key' => 'email_address',
      'machine_name' => 'contact_us_asu_access-email_address',
    ),
    'contact_us_3-message' => array(
      'form_key' => 'message',
      'machine_name' => 'contact_us_asu_access-message',
    ),
    'contact_us_3-school_or_organziation' => array(
      'form_key' => 'school_or_organziation',
      'machine_name' => 'contact_us_asu_access-school_or_organziation',
    ),
    'contact_us_3-title_or_affiliation' => array(
      'form_key' => 'title_or_affiliation',
      'machine_name' => 'contact_us_asu_access-title_or_affiliation',
    ),
    'contact_us_4-i_have_a_question_comment_suggestion_regarding' => array(
      'form_key' => 'i_have_a_question_comment_suggestion_regarding',
      'machine_name' => 'contact_us_students_families-i_have_a_question_comment_suggestion_regarding',
    ),
    'contact_us_4-name' => array(
      'form_key' => 'name',
      'machine_name' => 'contact_us_students_families-name',
    ),
    'contact_us_4-phone' => array(
      'form_key' => 'phone',
      'machine_name' => 'contact_us_students_families-phone',
    ),
    'contact_us_4-preferred_method_of_contact' => array(
      'form_key' => 'preferred_method_of_contact',
      'machine_name' => 'contact_us_students_families-preferred_method_of_contact',
    ),
    'eoss_marketing_request_form-how_are_you_going_to_measure_success_what_is_your_benchmark_for_success_select_all_that_apply_digital' => array(
      'form_key' => 'what_is_benchmark_to_measure_success_select_all_that_apply_digital',
      'machine_name' => 'eoss_marketing_request_form-what_is_benchmark_to_measure_success_select_all_that_apply_digital',
    ),
  );

  if ($result->nid == 1747) {
    if ($result->cid == 14) {
      $result->form_key = 'email_address_4';
      $result->machine_name = 'web_development_request-email_address_4';
    }
    if ($result->cid == 13) {
      $result->form_key = 'name_6';
      $result->machine_name = 'web_development_request-name_6';
    }
  }
  
  foreach($names as $src => $dst) {
    if ($result->machine_name == $src) {
      $result->form_key = $dst['form_key'];
      $result->machine_name = $dst['machine_name'];
    }
  }

  return $result;
}
